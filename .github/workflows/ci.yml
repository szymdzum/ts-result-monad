name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - uses: pnpm/action-setup@v4
        with:
          version: 10.4.1
          run_install: false
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
      - name: Run tests
        run: pnpm test
      - name: Run test coverage
        run: pnpm test:coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          directory: ./coverage
          fail_ci_if_error: false

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: pnpm/action-setup@v4
        with:
          version: 10.4.1
          run_install: false
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
      - name: Run lint
        run: pnpm lint

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: pnpm/action-setup@v4
        with:
          version: 10.4.1
          run_install: false
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
      - name: Build
        run: pnpm build

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: [build]
    # Only run if ENDORCTL_API_KEY is set
    if: ${{ vars.ENDORCTL_NAMESPACE != '' && secrets.ENDORCTL_API_KEY != '' }}
    permissions:
      contents: read
      security-events: write # For GitHub code scanning integration

    steps:
      - uses: actions/checkout@v4
      - name: Endor Labs Security Scan
        uses: endorlabs/github-action@b51bd06466b545f01a6ac788e3e1147695d3936c
        env:
          ENDORCTL_API_KEY: ${{ secrets.ENDORCTL_API_KEY }}
        with:
          namespace: ${{ vars.ENDORCTL_NAMESPACE }}
          upload-to-github-code-scanning: true